@model PjPRN222.Models.Cart
@{
    Layout = "~/Views/Shared/_Menu.cshtml";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>Giỏ hàng của bạn</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            padding: 40px;
            background-color: #f2f4f7;
            font-family: 'Segoe UI', sans-serif;
        }

        .cart-box {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        .cart-item {
            border-bottom: 1px solid #e9ecef;
            padding: 15px 0;
        }

            .cart-item:last-child {
                border-bottom: none;
            }

            .cart-item img {
                width: 80px;
                height: 80px;
                object-fit: cover;
                border-radius: 10px;
            }

        .cart-summary {
            border-radius: 15px;
            background: #fff;
            padding: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }

        .btn-success {
            font-weight: 500;
        }

        h5, h6 {
            font-weight: 600;
        }

        .cart-item:hover {
            background-color: #f8f9fa;
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <div class="container cart-box">
        <h2 class="mb-4 text-primary">🛒 Cart</h2>
        <form method="post">
            @Html.AntiForgeryToken()
        </form>

        <div class="row">
            <div class="col-md-8">
                @if (Model.CartItems != null && Model.CartItems.Any())
                {
                    <ul class="list-unstyled">
                        @foreach (var item in Model.CartItems)
                        {
                            var subtotal = item.Product.Price * item.Quantity;
                            <li class="cart-item d-flex align-items-center justify-content-between">
                                <img src="@item.Product.ImageUrl" class="me-3" style="width: 100px;" />
                                <div class="flex-grow-1">
                                    <h6>@item.Product.ProductName</h6>
                                    <small><strong>@item.Product.Price.ToString("N0") đ</strong></small><br />
                                    <span class="subtotal"></span>
                                </div>
                                <input type="number" value="@item.Quantity" class="form-control w-25 quantity-input"
                                       min="1"
                                       data-cartitemid="@item.CartItemId"
                                       data-price="@item.Product.Price" />
                                <form asp-action="Remove" asp-route-id="@item.CartItemId" method="post" class="ms-2">
                                    <button class="btn btn-danger btn-sm">Xóa</button>
                                </form>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>🛒 Giỏ hàng của bạn đang trống.</p>
                }

                <form id="addressForm">
                    <div class="mb-3">
                        <label for="province" class="form-label">Tỉnh/Thành phố</label>
                        <select id="province" class="form-control">
                            <option value="">Chọn tỉnh/thành phố</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="district" class="form-label">Quận/Huyện</label>
                        <select id="district" name="district" class="form-select">
                            <option value="" selected>Chọn quận/huyện</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="ward" class="form-label">Phường/Xã</label>
                        <select id="ward" name="ward" class="form-select">
                            <option value="" selected>Chọn phường/xã</option>
                        </select>
                    </div>
                </form>

              

            </div>

            @{
                var total = Model.CartItems?.Sum(i => i.Product.Price * i.Quantity) ?? 0;
            }

           

            <div class="col-md-4">
                <div class="cart-summary">
                    <h5 class="mb-3">Sumary Orders</h5>
                    <div class="d-flex justify-content-between">
                        <span>Tạm tính:</span>
                        <strong class="text-success total">@total.ToString("N0") đ</strong>
                       
                    </div>
                    <div class="d-flex justify-content-between">
                        <span>Phí vận chuyển:</span>
                        <strong>Miễn phí</strong>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Tổng cộng:</span>
                        <strong class="text-success total">@total.ToString("N0") đ</strong>
                    </div>

                    <button class="btn btn-success w-100">✅ Thanh toán</button>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    // Xử lý thay đổi số lượng sản phẩm trong giỏ hàng
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', () => {
            let quantity = parseInt(input.value);
            if (quantity < 1) {
                input.value = 1;
                quantity = 1;
            }

            const price = parseInt(input.dataset.price);
            const cartItemId = parseInt(input.dataset.cartitemid);
            const subtotal = price * quantity;

            const subtotalElement = input.closest('.cart-item').querySelector('.subtotal');
            if (subtotalElement) {
                subtotalElement.textContent = subtotal.toLocaleString('vi-VN') + ' đ';
            }

            // Tính lại tổng cộng
            let total = 0;
            document.querySelectorAll('.subtotal').forEach(el => {
                total += parseInt(el.textContent.replace(/[^0-9]/g, ''));
            });

            document.querySelector('.total').textContent = total.toLocaleString('vi-VN') + ' đ';

            // Gửi request cập nhật số lượng
            fetch('/Cart/UpdateQuantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    cartItemId: cartItemId,
                    quantity: quantity
                })
            });
        });
    });

    // Load tỉnh thành
    document.addEventListener("DOMContentLoaded", function () {
        fetch("/Ghn/GetProvinces")
            .then(res => res.json())
            .then(result => {
                const provinceSelect = document.getElementById("province");
                result.data.forEach(province => {
                    const option = document.createElement("option");
                    option.value = province.ProvinceID;
                    option.text = province.ProvinceName;
                    provinceSelect.appendChild(option);
                });
            });

        // Khi chọn tỉnh → load quận/huyện
        document.getElementById("province").addEventListener("change", function () {
            const provinceId = this.value;
            const districtSelect = document.getElementById("district");
            districtSelect.innerHTML = `<option value="">Chọn quận/huyện</option>`;
            document.getElementById("ward").innerHTML = `<option value="">Chọn phường/xã</option>`;

            if (provinceId) {
                fetch("/Ghn/GetDistrict", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(parseInt(provinceId))
                })
                    .then(res => res.json())
                    .then(result => {
                        result.data.forEach(district => {
                            const option = document.createElement("option");
                            option.value = district.DistrictID;
                            option.text = district.DistrictName;
                            districtSelect.appendChild(option);
                        });
                    });
            }
        });

        // Khi chọn quận/huyện → load phường/xã
        document.getElementById("district").addEventListener("change", function () {
            const districtId = this.value;
            const wardSelect = document.getElementById("ward");
            wardSelect.innerHTML = `<option value="">Chọn phường/xã</option>`;

            if (districtId) {
                fetch("/Ghn/GetWard", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(parseInt(districtId))
                })
                    .then(res => res.json())
                    .then(result => {
                        result.data.forEach(ward => {
                            const option = document.createElement("option");
                            option.value = ward.WardCode;
                            option.text = ward.WardName;
                            wardSelect.appendChild(option);
                        });
                    });
            }
        });
    });
</script>
</html>
